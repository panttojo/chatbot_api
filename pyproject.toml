[project]
name = "chatbot-api"
version = "0.1.0"
description = "Chatbot API"
readme = "README.md"
requires-python = ">=3.12,<4.0"
maintainers = [{ name = "Daniel Pantoja", email = "panttoja.17@gmail.com" }]

dependencies = [
    "fastapi>=0.116.1",
    "greenlet>=3.2.4",
    "gunicorn>=23.0.0",
    "loguru>=0.7.3",
    "openai>=1.100.2",
    "psycopg[binary]>=3.2.9",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pytz>=2025.2",
    "sentry-sdk>=2.35.0",
    "sqlalchemy>=2.0.43",
    "sqlmodel>=0.0.24",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = ["pre-commit>=4.3.0", "ruff>=0.12.9"]
testing = ["coverage>=7.10.4", "pytest>=8.4.1", "pytest-asyncio>=0.24.0"]

[tool.uv]
package = false


[tool.black]
line-length = 120
target-version = ["py312"]

[tool.ruff]
src = ["src"]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A002",   # Function arguments are shadowing a Python builtin
    "ANN002", # Missing type annotation for `*args`
    "ANN003", # Missing type annotation for `**kwargs`
    "ARG002", # Unused method argument: `args`
    "ARG003", # Unused method argument: `kwargs`
    "COM812", # "Trailing comma missing". If black is happy, I'm happy.
    "D",
    "E501",   # "Line too long". If black is happy, I'm happy.
    "FBT",

]


[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = [
    "ANN",     # Missing type annotation
    "ARG001",  # Unused function argument
    "ERA001",  # Found commented-out code
    "S101",    # Use of `assert` detected
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
pythonpath = ["src"]


[tool.coverage.run]
omit = ["__init__.py", "test_*.py", "*/core/bots/*", "*/tests/*"]
# concurrency = ["thread", "gevent"]

[tool.coverage.report]
show_missing = true
omit = ["__init__.py", "test_*.py", "*/core/bots/*", "*/tests/*"]
